#!/usr/bin/env bash
# usage: run-nextclade-full --database=gisaid|genbank [--aws_batch_cpus] [--aws_batch_memory] [--n_processors] [--n_nextclade_threads] [--batch_size]
#        run-nextclade-full --help
#
# Make a full Nextclade run, recomputing clades and other metrics
# for all sequences. This version schedules run on AWS batch.
#
# See `./bin/run-nextclade-full` for more details.
#
# --database=gisaid|genbank   Database to use. This defines which sequences will
#                             be downloaded and where the results will be
#                             uploaded.
#
# --aws_batch_cpus=96         Number of processors to request from AWS Batch
#
# --aws_batch_memory=180GiB   Amount of memory to request from AWS Batch
#
# --n_processors              Maximum number of threads all instances of
#                             Nextclade are allowed to use.
#
# --n_nextclade_threads       Maximum number of threads each individual instance
#                             of Nextclade is allowed to use
#
# --batch_size                Maximum number of sequences fed to an individual
#                             instance of Nextclade
#
set -o errexit
set -o nounset
set -o pipefail
trap "exit" INT

export AWS_DEFAULT_REGION="${AWS_DEFAULT_REGION:-us-east-1}"
export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID:-}"
export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY:-}"
export SLACK_TOKEN="${SLACK_TOKEN:-}"
export SLACK_CHANNELS="${SLACK_CHANNELS:-}"

bin=$(dirname "$0")

main() {
  # These variables are passed through to the `./bin/run-nextclade-full`
  # as corresponding CLi flags
  DATABASE=
  N_PROCESSORS=
  N_NEXTCLADE_THREADS=
  BATCH_SIZE=


  AWS_BATCH_CPUS=96
  AWS_BATCH_MEMORY=180GiB

  for arg; do
    case "$arg" in
    -h | --help)
      print-help
      exit
      ;;
    --database=*)
      DATABASE="${arg#*=}"
      shift
      ;;
    --aws_batch_cpus=*)
      AWS_BATCH_CPUS="${arg#*=}"
      shift
      ;;
    --aws_batch_memory=*)
      AWS_BATCH_MEMORY="${arg#*=}"
      shift
      ;;
    --n_processors=*)
      N_PROCESSORS="${arg#*=}"
      shift
      ;;
    --n_nextclade_threads=*)
      N_NEXTCLADE_THREADS="${arg#*=}"
      shift
      ;;
    --batch_size=*)
      BATCH_SIZE="${arg#*=}"
      shift
      ;;
    esac
  done

  if [ "${DATABASE}" != "gisaid" ] && [ "${DATABASE}" != "genbank" ]; then
    echo "[ERROR] ${0}:${LINENO}: Unknown database: The '--database' flag should be set to either 'gisaid' or 'genbank'"
    exit 1
  fi

  "$bin/write-envdir" env.d \
    AWS_DEFAULT_REGION \
    AWS_ACCESS_KEY_ID \
    AWS_SECRET_ACCESS_KEY \
    SLACK_TOKEN \
    SLACK_CHANNELS \

  echo "[ INFO] ${0}:${LINENO}: Submitting Nextclade full run on AWS Batch"
  echo "[ INFO] ${0}:${LINENO}:   DATABASE=${DATABASE}"
  echo "[ INFO] ${0}:${LINENO}:   AWS_BATCH_CPUS=${AWS_BATCH_CPUS}"
  echo "[ INFO] ${0}:${LINENO}:   AWS_BATCH_MEMORY=${AWS_BATCH_MEMORY}"
  echo "[ INFO] ${0}:${LINENO}:   N_PROCESSORS=${N_PROCESSORS}"
  echo "[ INFO] ${0}:${LINENO}:   N_NEXTCLADE_THREADS=${N_NEXTCLADE_THREADS}"
  echo "[ INFO] ${0}:${LINENO}:   BATCH_SIZE=${BATCH_SIZE}"

  nextstrain build \
    --aws-batch \
    --detach \
    --no-download \
    --image nextstrain/ncov-ingest \
    --cpus "$AWS_BATCH_CPUS" \
    --memory "$AWS_BATCH_MEMORY" \
    --exec env \
    . \
    envdir env.d run-nextclade-full \
      --database="${DATABASE}" \
      ${N_PROCESSORS:+--n_processors=$N_PROCESSORS} \
      ${N_NEXTCLADE_THREADS:+--n_nextclade_threads=$N_NEXTCLADE_THREADS} \
      ${BATCH_SIZE:+--batch_size=$BATCH_SIZE}
}

print-help() {
  # Print the help comments at the top of this file ($0)
  local line
  while read -r line; do
    if [[ $line =~ ^#! ]]; then
      continue
    elif [[ $line =~ ^# ]]; then
      line="${line/##/}"
      line="${line/# /}"
      echo "$line"
    else
      break
    fi
  done <"$0"
}

main "$@"
