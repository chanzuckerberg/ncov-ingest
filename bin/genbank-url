#!/usr/bin/env python3
"""
Generate URL to download all SARS-CoV-2 sequences and their curated metadata
from GenBank via NCBI Virus.

The URL this program builds is based on observing the network activity that

    https://www.ncbi.nlm.nih.gov/labs/virus/vssi/#/virus?SeqType_s=Nucleotide&VirusLineage_ss=Monkeypox virus (monkeypox), taxid:10244

performs after clicking through the download interface.  Some tweaks were made
by comparing different download requests and guessing, which allows us to
download the metadata + sequence in the same request instead of two.

See also the full set of fields available in an example record saved to:

    docs/ncbi-virus-all-fields-example.json

which was extracted from network observations during load of the above NCBI
Virus URL.
"""
from urllib.parse import urlencode

endpoint = "https://www.ncbi.nlm.nih.gov/genomes/VirusVariation/vvsearch2/"

# Sidney's search criteria: https://www.ncbi.nlm.nih.gov/labs/virus/vssi/#/virus?SeqType_s=Nucleotide&VirusLineage_ss=Monkeypox%20virus%20(monkeypox),%20taxid:10244&SourceDB_s=GenBank&Completeness_s=complete&HostLineage_ss=Homo%20sapiens%20(human),%20taxid:9606&CollectionDate_dr=2022-01-01T00:00:00.00Z%20TO%202022-09-22T23:59:59.00Z&EnvSample_s=exclude&LabHost_s=exclude&VacStrain_s=exclude&Proviral_s=exclude&QualNum_i=39000
params = {
    # Search criteria
    "fq": [
        # '{!tag=Region_s}Region_s:("Africa")',       # Useful for debugging
        '{!tag=SLen_i}SLen_i:([177000 TO 200000])', # doesn't work but we eventually want to be downloading genomes with >= 90% completeness relative to reference
        '{!tag=SeqType_s}SeqType_s:("Nucleotide")',
        "VirusLineageId_ss:(10244)",  # Monkeypox
        '{!tag=SourceDB_s}SourceDB_s:("GenBank")',
        # '{!tag=Completeness_s}Completeness_s:("complete")', # for mpx, we can double our data by including partial genomes with >=90% completeness
        "HostLineageId_ss:(9605)", # Human
        "{!tag=CollectionDate_dr}CollectionDate_dr:[2022-01-01T00:00:00.00Z TO 2033-01-01T23:59:59.00Z]",  # Only the current outbreak
        "{!tag=EnvSample_s} NOT EnvSample_s:*",
        "{!tag=LabHost_s} NOT LabHost_s:*",
        "{!tag=VacStrain_s} NOT VacStrain_s:*",
        "{!tag=Proviral_s} NOT Proviral_s:*",
        "{!tag=QualNum_i}QualNum_i:([0 TO 39000])",
    ],
    # Unclear, but seems necessary.
    "q": "*:*",
    # Response format
    "cmd": "download",
    "dlfmt": "csv",
    "fl": ",".join(
        ":".join(names)
        for names in [
            # Pairs of (output column name, source data field).  These are pulled
            # from watching requests from the UI.
            #
            # XXX TODO: Is the full set source data fields documented
            # somewhere?  Is there more info we could be pulling that'd be
            # useful?
            #   -trs, 13 May 2020
            ("genbank_accession", "id"),
            ("genbank_accession_rev", "AccVer_s"),  # not sure what this is, doesn't seem necessary for our purposes
            # ("database", "SourceDB_s"), # always genbank per query
            ("sra_accession", "SRALink_ss"),
            ("strain", "Isolate_s"),
            ("region", "Region_s"),
            ("location", "CountryFull_s"),
            ("collected", "CollectionDate_s"),
            ("submitted", "CreateDate_dt"),
            # ("pango_lineage", "Lineage_s"), # not relevant for mpx
            # ("length", "SLen_i"), 
            # ("host", "Host_s"), # always human per query
            ("isolation_source", "Isolation_csv"),
            ("biosample_accession", "BioSample_s"),
            ("title", "Definition_s"),
            ("authors", "Authors_csv"),
            ("publications", "PubMed_csv"),
            ("sequence", "Nucleotide_seq"),
        ]
    ),
    # Stable sort with newest last so diffs work nicely.  Columns are source
    # data fields, not our output columns.
    "sort": "SourceDB_s desc, CollectionDate_s asc, id asc",
    # This isn't Entrez, but include the same email parameter it requires just
    # to be nice.
    "email": "hello@czgenepi.org",
}
query = urlencode(params, doseq=True, encoding="utf-8")

print(f"{endpoint}?{query}")
